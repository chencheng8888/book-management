name: Deploy Go Project with Docker to Aliyun CR

on:
  push:
    branches:
      - main # 每次推送到 main 分支时触发该工作流

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 设置 Docker Buildx（支持多平台构建）
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 登录阿里云 Docker Registry
      - name: Log in to Aliyun Docker Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}
          registry: crpi-vgud82zncz8nwfuc.cn-hangzhou.personal.cr.aliyuncs.com

      # 构建 Docker 镜像
      - name: Build Docker image
        run: |
          docker build -t crpi-vgud82zncz8nwfuc.cn-hangzhou.personal.cr.aliyuncs.com/qianchengsijin4869/giteval:bm .

      # 推送 Docker 镜像到阿里云 Docker Registry
      - name: Push Docker image to Aliyun CR
        run: |
          docker push crpi-vgud82zncz8nwfuc.cn-hangzhou.personal.cr.aliyuncs.com/qianchengsijin4869/giteval:bm

      # 设置 SSH 密钥以便进行无密码登录
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_ADDR }} >> ~/.ssh/known_hosts

      # SSH 连接到服务器并拉取并运行 Docker 镜像
      - name: SSH into server and deploy Docker container
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_ADDR }} << 'EOF'
            docker rm -f bm || true
            docker pull crpi-vgud82zncz8nwfuc.cn-hangzhou.personal.cr.aliyuncs.com/qianchengsijin4869/giteval:bm
            docker run -d \
            --name bm \
            --network my_network \
            -p 8989:8989 \
            -v ~/configs/config.yaml:/book_management/configs/config.yaml \
            --restart always \
            crpi-vgud82zncz8nwfuc.cn-hangzhou.personal.cr.aliyuncs.com/qianchengsijin4869/giteval:bm
          EOF
