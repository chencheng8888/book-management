basePath: /api/v1
definitions:
  controller.AddStockReq:
    properties:
      author:
        description: 作者
        type: string
      category:
        description: 类别
        type: string
      name:
        description: 书本名称
        type: string
      publisher:
        description: 出版社
        type: string
      quantity_added:
        description: 添加的库存数目
        type: integer
      where:
        description: 库存位置
        type: string
    required:
    - author
    - category
    - name
    - publisher
    - quantity_added
    type: object
  controller.AddStockResp:
    properties:
      code:
        type: integer
      data:
        properties:
          book_id:
            description: 书本ID
            type: integer
        required:
        - book_id
        type: object
      msg:
        type: string
    required:
    - code
    - msg
    type: object
  controller.Book:
    properties:
      author:
        description: 作者
        type: string
      book_id:
        description: 书本ID
        type: integer
      category:
        description: 类别
        type: string
      created_at:
        description: 入库时间
        type: string
      name:
        description: 书本名称
        type: string
      publisher:
        description: 出版社
        type: string
      stock:
        description: 库存数量
        type: integer
      stock_status:
        description: 库存状态
        type: string
      stock_where:
        description: 库存位置
        type: string
    required:
    - author
    - book_id
    - category
    - created_at
    - name
    - publisher
    - stock
    - stock_status
    - stock_where
    type: object
  controller.BookBorrowRecord:
    properties:
      book_id:
        description: 书本ID【这个你可以理解为一类书，比如《高等数学》】
        type: integer
      copy_id:
        description: "副本ID\t【这个你可以理解为具体一本书，比如《高等数学》的第一本"
        type: integer
      return_status:
        description: 归还状态
        type: string
      should_return_time:
        description: 应该归还的时间
        type: string
      user_id:
        description: 用户ID
        type: string
      user_name:
        description: 用户名
        type: string
    required:
    - book_id
    - copy_id
    - return_status
    - should_return_time
    - user_id
    - user_name
    type: object
  controller.BorrowBookReq:
    properties:
      book_id:
        description: 书本ID【这个你可以理解为一类书，比如《高等数学》】
        type: integer
      borrower_id:
        description: 借阅者ID
        type: string
      expected_return_time:
        description: 预计归还时间,格式为"2006-01-02"
        type: string
    required:
    - book_id
    - borrower_id
    - expected_return_time
    type: object
  controller.BorrowBookResp:
    properties:
      code:
        type: integer
      data:
        properties:
          book_id:
            description: 实际借阅的书本ID
            type: integer
          copy_id:
            description: "副本ID\t【这个你可以理解为具体一本书，比如《高等数学》的第一本】"
            type: integer
        required:
        - book_id
        - copy_id
        type: object
      msg:
        type: string
    required:
    - code
    - data
    - msg
    type: object
  controller.FuzzyQueryBookStockResp:
    properties:
      code:
        type: integer
      data:
        description: 数据
        properties:
          books:
            description: 数据
            items:
              $ref: '#/definitions/controller.Book'
            type: array
          current_page:
            description: 当前页
            type: integer
          total_page:
            description: 总数
            type: integer
        required:
        - books
        - current_page
        - total_page
        type: object
      msg:
        type: string
    required:
    - code
    - data
    - msg
    type: object
  controller.QueryBookBorrowRecordResp:
    properties:
      code:
        type: integer
      data:
        properties:
          borrow_records:
            items:
              $ref: '#/definitions/controller.BookBorrowRecord'
            type: array
          current_page:
            description: 当前页
            type: integer
          total_page:
            description: 总数
            type: integer
        required:
        - borrow_records
        - current_page
        - total_page
        type: object
      msg:
        type: string
    required:
    - code
    - data
    - msg
    type: object
  controller.SearchStockByBookIDResp:
    properties:
      code:
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/controller.Book'
        description: 数据
      msg:
        type: string
    required:
    - code
    - data
    - msg
    type: object
host: localhost:8989
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for a book management system.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Book Management API
  version: "1.0"
paths:
  /api/v1/book/borrow/add:
    post:
      consumes:
      - application/json
      description: 借书接口
      parameters:
      - description: 借书请求
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/controller.BorrowBookReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.BorrowBookResp'
      summary: 借书
      tags:
      - 借书
  /api/v1/book/borrow/query:
    get:
      consumes:
      - application/json
      description: 查询借书记录
      parameters:
      - description: 第几页
        in: query
        name: page
        required: true
        type: integer
      - description: 每页大小
        in: query
        name: page_size
        required: true
        type: integer
      - description: 借阅状态的查询条件
        in: query
        name: query_status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.QueryBookBorrowRecordResp'
      summary: 查询借书记录
      tags:
      - 借书
  /api/v1/book/stock/add:
    post:
      consumes:
      - application/json
      description: 添加库存接口，参数的where是可选参数
      parameters:
      - description: 增加库存请求
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/controller.AddStockReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.AddStockResp'
      summary: 添加库存
      tags:
      - 库存
  /api/v1/book/stock/fuzzy_query:
    get:
      consumes:
      - application/json
      description: 模糊查询库存信息,没有任何查询条件就是直接列出数据
      parameters:
      - description: 入库时间
        in: query
        name: add_stock_time
        type: string
      - description: 入库地点
        in: query
        name: add_stock_where
        type: string
      - description: 作者
        in: query
        name: author
        type: string
      - description: 类别
        in: query
        name: category
        type: string
      - description: 书本名称
        in: query
        name: name
        type: string
      - description: 第几页
        in: query
        name: page
        required: true
        type: integer
      - description: 每页大小
        in: query
        name: page_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.FuzzyQueryBookStockResp'
      summary: 模糊查询库存信息
      tags:
      - 库存
  /api/v1/book/stock/searchByID:
    get:
      consumes:
      - application/json
      description: 根据ID查询库存信息
      parameters:
      - description: 书本ID
        in: query
        name: book_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.SearchStockByBookIDResp'
      summary: 根据ID查询库存信息
      tags:
      - 库存
swagger: "2.0"
