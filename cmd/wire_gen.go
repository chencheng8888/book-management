// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"book-management/configs"
	"book-management/internal/controller"
	"book-management/internal/ioc"
	"book-management/internal/middleware"
	"book-management/internal/repository/cache"
	"book-management/internal/repository/dao"
	"book-management/internal/repository/repo"
	"book-management/internal/route"
	"book-management/internal/service"
)

// Injectors from wire.go:

func InitializeApp(config configs.AppConfig) (*App, error) {
	client, err := ioc.NewCache(config)
	if err != nil {
		return nil, err
	}
	authCtrl := controller.NewAuthCtrl(client, config)
	myMiddleware := middleware.NewMyMiddleware(authCtrl)
	v := middleware.NewMiddlewares(myMiddleware)
	pingController := controller.NewPingController()
	db, err := ioc.NewGormDB(config)
	if err != nil {
		return nil, err
	}
	bookDao := dao.NewBookDao(db)
	bookCache := cache.NewBookCache(client)
	userDao := dao.NewUserDao(db)
	bookBorrowRepo := repo.NewBookBorrowRepo(bookDao, bookCache, userDao)
	bookStockRepo := repo.NewBookStockRepo(bookDao, bookDao, bookCache)
	bookDonateRepo := repo.NewBookDonateRepo(bookDao, bookDao, userDao, userDao)
	bookSvc := service.NewBookSvc(bookBorrowRepo, bookStockRepo, bookDonateRepo)
	bookStockCtrl := controller.NewBookStockCtrl(bookSvc)
	bookBorrowCtrl := controller.NewBookBorrowCtrl(bookSvc)
	userRepo := repo.NewUserRepo(userDao)
	userSvc := service.NewUserSvc(userRepo)
	userCtrl := controller.NewUserCtrl(userSvc)
	bookDonateCtrl := controller.NewBookDonateCtrl(bookSvc)
	activityDao := dao.NewActivityDao(db)
	activityRepo := repo.NewActivityRepo(activityDao)
	activitySvc := service.NewActivitySvc(activityRepo)
	activityCtrl := controller.NewActivityCtrl(activitySvc)
	volunteerDao := dao.NewVolunteerDao(db)
	volunteerRepo := repo.NewVolunteerRepo(volunteerDao)
	volunteerSvc := service.NewVolunteerSvc(volunteerRepo)
	volunteerController := controller.NewVolunteerController(volunteerSvc)
	v2 := controller.NewCtrl(pingController, authCtrl, bookStockCtrl, bookBorrowCtrl, userCtrl, bookDonateCtrl, activityCtrl, volunteerController)
	engine := route.NewRouter(v, v2)
	app := newApp(engine)
	return app, nil
}
